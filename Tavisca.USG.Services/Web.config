<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="akka" type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
  </configSections>
  <akka>
    <hocon>
      <![CDATA[
					akka {
						actor {
							provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
							deployment {
								/supplier {
									router = round-robin-group
                  routees.paths = ["/user/broadcaster"]
                  nr-of-instances = 5
									virtual-nodes-factor = 8
									cluster {
											enabled = on
											max-nr-of-instances-per-node = 1
											allow-local-routees = on
											use-role = connector
									}
								}                
							}
						}
						
						remote {
							log-remote-lifecycle-events = DEBUG
							
							helios.tcp {
								transport-class = "Akka.Remote.Transport.Helios.HeliosTcpTransport, Akka.Remote"
								applied-adapters = []
								transport-protocol = tcp
								#will be populated with a dynamic host-name at runtime if left uncommented
								public-hostname = "192.168.2.131"
								hostname = "192.168.2.131"
								port = 0
							}
						}            

						cluster {
							#will inject this node as a self-seed node at run-time
							seed-nodes = ["akka.tcp://usg@192.168.2.131:4053"] #manually populate other seed nodes here, i.e. "akka.tcp://lighthouse@127.0.0.1:4053", "akka.tcp://lighthouse@127.0.0.1:4044"
							roles = [usgservice]
						}
					}
			]]>
    </hocon>
  </akka>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true"/>
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5.2"/>
    <httpRuntime targetFramework="4.5.2"/>
    <httpModules>
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web"/>
    </httpModules>
  </system.web>
  <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" minFreeMemoryPercentageToActivateService="0">
      <serviceActivations>
        <add relativeAddress="HotelSearchService.svc" service="Tavisca.USG.ServiceImpl.HotelSearchService" />
      </serviceActivations>
    </serviceHostingEnvironment>
    <bindings />
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="web">
          <webHttp helpEnabled="true" automaticFormatSelectionEnabled="true" faultExceptionEnabled="true" />
        </behavior>
        <behavior name="Default">
          <dataContractSerializer maxItemsInObjectGraph="10000000" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <standardEndpoints>
      <webHttpEndpoint>
        <standardEndpoint maxReceivedMessageSize="4194304" maxBufferSize="4194304" maxBufferPoolSize="0">
          <readerQuotas maxStringContentLength="4194304" maxArrayLength="4194304" maxDepth="4194304" />
          <security mode="None">
            <transport clientCredentialType="None" />
          </security>
        </standardEndpoint>
      </webHttpEndpoint>
    </standardEndpoints>
    <services>
      <service name="Tavisca.USG.ServiceImpl.HotelSearchService">
        <endpoint address="mex" kind="mexEndpoint" />
        <endpoint kind="webHttpEndpoint" contract="Tavisca.USG.ServiceImpl.ServiceContracts.IHotelSearchService" behaviorConfiguration="web" />
      </service>
    </services>
  </system.serviceModel>
  <system.web.extensions>
    <scripting>
      <scriptResourceHandler enableCaching="true" enableCompression="true" />
      <webServices>
        <jsonSerialization maxJsonLength="999999999" />
      </webServices>
    </scripting>
  </system.web.extensions>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="ApplicationInsightsWebTracking"/>
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web"
        preCondition="managedHandler"/>
    </modules>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
    <validation validateIntegratedModeConfiguration="false"/>
  </system.webServer>

</configuration>
